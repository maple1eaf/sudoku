import unittest

from sudoku.matrix import IntMatrix


class SudokuFixture(unittest.TestCase):

    def setUp(self):
        # easy levelï¼Œlogically get answer
        self.problem_2d_easy: IntMatrix = [
            [3, 7, 0, 0, 1, 9, 0, 4, 8],
            [0, 0, 8, 0, 4, 0, 0, 2, 0],
            [0, 0, 5, 0, 8, 0, 0, 0, 0],
            [0, 0, 6, 2, 0, 0, 0, 7, 9],
            [0, 0, 9, 1, 3, 7, 8, 0, 0],
            [5, 3, 0, 0, 0, 8, 2, 0, 0],
            [0, 0, 0, 0, 7, 0, 6, 0, 0],
            [0, 8, 0, 0, 0, 0, 9, 0, 0],
            [2, 6, 0, 3, 9, 0, 0, 8, 7],
        ]
        self.answer_2d_easy: IntMatrix = [
            [3, 7, 2, 6, 1, 9, 5, 4, 8],
            [1, 9, 8, 5, 4, 3, 7, 2, 6],
            [6, 4, 5, 7, 8, 2, 1, 9, 3],
            [8, 1, 6, 2, 5, 4, 3, 7, 9],
            [4, 2, 9, 1, 3, 7, 8, 6, 5],
            [5, 3, 7, 9, 6, 8, 2, 1, 4],
            [9, 5, 4, 8, 7, 1, 6, 3, 2],
            [7, 8, 3, 4, 2, 6, 9, 5, 1],
            [2, 6, 1, 3, 9, 5, 4, 8, 7],
        ]
        # hard leve, need recursively try
        self.problem_2d_hard: IntMatrix = [
            [0, 8, 0, 0, 0, 5, 0, 0, 0],
            [0, 0, 0, 8, 0, 0, 0, 0, 2],
            [0, 0, 9, 0, 2, 0, 7, 0, 0],
            [4, 0, 0, 0, 9, 0, 0, 3, 0],
            [0, 0, 2, 3, 0, 1, 9, 0, 0],
            [0, 3, 0, 0, 6, 0, 0, 0, 8],
            [0, 0, 7, 0, 5, 0, 2, 0, 0],
            [5, 0, 0, 0, 0, 4, 0, 0, 0],
            [0, 0, 0, 7, 0, 0, 0, 9, 0],
        ]
        self.answer_2d_hard: IntMatrix = [
            [2, 8, 3, 1, 7, 5, 4, 6, 9],
            [7, 5, 6, 8, 4, 9, 3, 1, 2],
            [1, 4, 9, 6, 2, 3, 7, 8, 5],
            [4, 1, 8, 5, 9, 2, 6, 3, 7],
            [6, 7, 2, 3, 8, 1, 9, 5, 4],
            [9, 3, 5, 4, 6, 7, 1, 2, 8],
            [3, 6, 7, 9, 5, 8, 2, 4, 1],
            [5, 9, 1, 2, 3, 4, 8, 7, 6],
            [8, 2, 4, 7, 1, 6, 5, 9, 3],
        ]
        # ash level
        self.problem_2d_ash: IntMatrix = [
            [0, 4, 2, 0, 9, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 5, 0, 7, 3],
            [0, 0, 0, 0, 0, 0, 0, 0, 0],
            [6, 0, 0, 0, 0, 7, 0, 0, 0],
            [0, 0, 0, 4, 0, 0, 9, 0, 0],
            [0, 8, 0, 0, 0, 0, 2, 0, 0],
            [0, 0, 6, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 2, 8, 0, 0, 0, 0],
            [7, 0, 0, 0, 0, 0, 0, 6, 0],
        ]
        self.answer_2d_ash: IntMatrix = [
            [3, 4, 2, 7, 9, 1, 6, 5, 8],
            [8, 9, 1, 6, 2, 5, 4, 7, 3],
            [5, 6, 7, 3, 4, 8, 1, 2, 9],
            [6, 2, 9, 8, 3, 7, 5, 4, 1],
            [1, 7, 3, 4, 5, 2, 9, 8, 6],
            [4, 8, 5, 1, 6, 9, 2, 3, 7],
            [2, 1, 6, 5, 7, 3, 8, 9, 4],
            [9, 3, 4, 2, 8, 6, 7, 1, 5],
            [7, 5, 8, 9, 1, 4, 3, 6, 2],
        ]
        # wrong sudoku
        self.problem_2d_wrong: IntMatrix = [
            [0, 1, 0, 0, 0, 3, 0, 8, 9],
            [0, 0, 0, 0, 9, 0, 0, 0, 6],
            [6, 0, 0, 5, 0, 0, 0, 7, 0],
            [3, 4, 0, 1, 0, 0, 8, 6, 0],
            [0, 0, 0, 4, 6, 9, 0, 0, 0],
            [0, 6, 2, 0, 0, 8, 0, 4, 1],
            [0, 2, 0, 0, 0, 4, 5, 0, 8],  # change 5 to 0 to make it right
            [9, 0, 0, 0, 1, 0, 0, 0, 0],
            [1, 5, 0, 8, 0, 0, 0, 9, 0],
        ]
